{"version":3,"sources":["ColorBox.js","Palette.js","seedColors.js","App.js","serviceWorker.js","index.js"],"names":["ColorBox","state","copied","changeCopyState","_this","setState","setTimeout","_this$props","this","props","name","background","react_default","a","createElement","lib","text","onCopy","className","style","concat","Component","Palette","colorBoxes","colors","map","color","src_ColorBox_0","seedColors","paletteName","id","emoji","App","src_Palette_0","ColorSeeds","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da904c2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './ColorBox.css';\nclass ColorBox extends Component {\n  state = { copied: false };\n\n  changeCopyState = () => {\n    this.setState({ copied: true }, () => {\n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, 1500);\n    });\n  };\n  render() {\n    const { name, background } = this.props;\n    const { copied } = this.state;\n    return (\n      <CopyToClipboard text={background} onCopy={this.changeCopyState}>\n        <div className=\"ColorBox\" style={{ background }}>\n          <div\n            style={{ background }}\n            className={`copy-overlay ${copied && 'show'}`}\n          />\n          <div className={`copy-msg ${copied && 'show'}`}>\n            <h1>copied</h1>\n            <p>{background}</p>\n          </div>\n          <div className=\"copy-container\">\n            <div className=\"box-content\">\n              <span>{name}</span>\n            </div>\n            <button className=\"copy-button\">Copy</button>\n          </div>\n          <span className=\"see-more\">More</span>\n        </div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nexport default ColorBox;\n","import React, { Component } from 'react';\nimport ColorBox from './ColorBox';\nimport './Palette.css';\nclass Palette extends Component {\n  render() {\n    const colorBoxes = this.props.colors.map(color => (\n      <ColorBox background={color.color} name={color.name} />\n    ));\n    return (\n      <div className=\"Palette\">\n        <div className=\"Palette-colors\"> {colorBoxes} </div>\n      </div>\n    );\n  }\n}\n\nexport default Palette;\n","export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"ðŸŽ¨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"ðŸ¤™\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"ðŸ‡³ðŸ‡±\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"ðŸ‡ºðŸ‡¸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"ðŸ‡¦ðŸ‡º\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"ðŸ‡¬ðŸ‡§\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"ðŸ‡ªðŸ‡¸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"ðŸ‡®ðŸ‡³\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"ðŸ‡«ðŸ‡·\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","import React from 'react';\nimport Palette from './Palette';\nimport ColorSeeds from './seedColors';\n\nfunction App() {\n  return (\n    <div>\n      <Palette {...ColorSeeds[4]} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}